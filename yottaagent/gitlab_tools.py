import os
from pathlib import Path

import gitlab
from gitlab.v4.objects import ProjectIssue


def get_gitlab_issue(
    issue_id: int, project_name: str = "YottaDB/DB/YDBTest"
) -> ProjectIssue:
    gl = gitlab.Gitlab(
        "https://gitlab.com", private_token=os.getenv("GITLAB_ACCESS_TOKEN")
    )
    project = gl.projects.get(project_name)
    issue = project.issues.get(issue_id)
    return issue


def save_to_gitlab(
    issue_id: int,
    explain_file: Path,
    test_file: Path,
    issues_dir: Path,
    project_name: str = "YottaDB/DB/YDBTest",
):
    gl = gitlab.Gitlab(
        "https://gitlab.com", private_token=os.getenv("GITLAB_ACCESS_TOKEN")
    )
    project = gl.projects.get(project_name)
    issue = project.issues.get(issue_id)
    test_file_basename = test_file.stem
    upload_result = project.upload(
        filepath=str(test_file),
        filename=f"{test_file_basename}.m",
    )
    link = upload_result["markdown"]
    body = f"""This issue response was generated by a bot.\n\n{Path(issues_dir / explain_file).read_text()}\n\nAttachments\n:{link}\n"""
    issue.notes.create({"body": body})


def issue_as_string(project_issue: ProjectIssue) -> str:
    notes = [
        f"{note.created_at} - {note.body}\n" for note in project_issue.notes.list()
    ]
    return f"Issue {project_issue.id}: {project_issue.title}\nDescription: {project_issue.description}\nNotes: {notes}"
